{
	"info": {
		"_postman_id": "5ff4bf98-3472-48f0-aeb4-fa143f8381b9",
		"name": "api testing",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "48599759"
	},
	"item": [
		{
			"name": "test",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							" \r",
							"pm.response.to.have.status(200);\r",
							" \r",
							"});\r",
							" \r",
							" \r",
							"pm.test(\"Response has posts array\", function () {\r",
							" \r",
							"var jsonData = pm.response.json();\r",
							" \r",
							"pm.expect(jsonData).to.be.an('array');\r",
							" \r",
							"pm.expect(jsonData.length).to.be.above(0);\r",
							" \r",
							"});"
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/posts",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"posts"
					]
				}
			},
			"response": []
		},
		{
			"name": "test1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							" \r",
							"pm.response.to.have.status(200);\r",
							" \r",
							"});\r",
							"pm.test(\"Post has correct structure\", function () {\r",
							" \r",
							"var jsonData = pm.response.json();\r",
							" \r",
							"pm.expect(jsonData).to.have.property('id');\r",
							" \r",
							"pm.expect(jsonData).to.have.property('title');\r",
							" \r",
							"pm.expect(jsonData).to.have.property('body');\r",
							" \r",
							"pm.expect(jsonData).to.have.property('userId');\r",
							" \r",
							"});\r",
							" "
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"userId\": 1,\r\n  \"id\": 1,\r\n  \"title\": \"some title\",\r\n  \"body\": \"some body\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/posts/1",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"posts",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "test2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							" \r",
							"pm.response.to.have.status(201);\r",
							" \r",
							"});\r",
							" \r",
							" \r",
							"pm.test(\"Response contains created post\", function () {\r",
							" \r",
							"var jsonData = pm.response.json();\r",
							" \r",
							"pm.expect(jsonData).to.have.property('id');\r",
							" \r",
							"pm.expect(jsonData.title).to.eql(\"Test Post\");\r",
							" \r",
							"});"
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\r\n\"title\": \"Test Post\",\r\n\"body\": \"This is a test post\",\r\n\"userId\": 1 \r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/posts",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"posts"
					]
				}
			},
			"response": []
		}
	]
}